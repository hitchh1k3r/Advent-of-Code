package main;

import "core:fmt"
import "core:strconv"
import "core:strings"
import "core:mem"
import "core:os"
import "core:slice"
import "core:reflect"
import "core:math"
import "core:time"
import "core:sys/windows"
import "core:sort"
import "core:unicode/utf8"

import "../../../aoc";

// TEST ANSWERS ////////////////////////////////////////////////////////////////////////////////////

PART_1_TEST_A_EXPECT : aoc.Result = 26397;
PART_1_TEST_B_EXPECT : aoc.Result = nil;
PART_1_TEST_C_EXPECT : aoc.Result = nil;

// SOLUTION ////////////////////////////////////////////////////////////////////////////////////////

part_1 :: proc($MODE : aoc.LogicMode) -> aoc.Result
{
  using aoc, fmt;

  when MODE != .SOLUTION
  { // TESTS MODE
    DEBUG  :: true;
    TIMING :: false;
  }
  else
  { // SOLVE MODE
    DEBUG  :: false;
    TIMING :: false;
  }


  input := get_input(MODE);
  all_lines := lines(input);

  stack : Stack(rune, 1000);

  score := 0;
  for line in all_lines
  {
    stack.index = 0;
    char_loop: for c in line
    {
      switch c
      {
        case '(':
          stack_push(&stack, c);
        case '[':
          stack_push(&stack, c);
        case '{':
          stack_push(&stack, c);
        case '<':
          stack_push(&stack, c);
        case ')':
          s := stack_pop(&stack);
          if stack.index == 0
          {
            break char_loop;
          }
          if '(' != s
          {
            score += 3;
            break char_loop;
          }
        case ']':
          s := stack_pop(&stack);
          if stack.index == 0
          {
            break char_loop;
          }
          if '[' != s
          {
            score += 57;
            break char_loop;
          }
        case '}':
          s := stack_pop(&stack);
          if stack.index == 0
          {
            break char_loop;
          }
          if '{' != s
          {
            score += 1197;
            break char_loop;
          }
        case '>':
          s := stack_pop(&stack);
          if stack.index == 0
          {
            break char_loop;
          }
          if '<' != s
          {
            score += 25137;
            break char_loop;
          }
      }
    }
    when DEBUG do println(line, score);
  }

  return score;
}
